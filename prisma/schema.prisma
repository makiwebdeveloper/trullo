generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  name          String
  password      String
  assignedTasks Task[]
  projects      ProjectUser[]
}

model Project {
  id          String  @id @default(uuid())
  title       String
  description String?

  users ProjectUser[]
  tasks Task[]
}

model ProjectUser {
  role ProjectUserRole @default(USER)

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String

  @@id([userId, projectId])
}

model Task {
  id           String         @id @default(uuid())
  createdAt    DateTime       @default(now())
  finishedAt   DateTime?
  title        String
  description  String?
  status       TaskStatusEnum @default(TODO)
  assignedTo   User?          @relation(fields: [assignedToId], references: [id], onDelete: Cascade)
  assignedToId String?
  project      Project        @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId    String
}

enum TaskStatusEnum {
  TODO
  IN_PROGRESS
  BlOCKED
  DONE
}

enum ProjectUserRole {
  ADMIN
  USER
}
